/**
 * Copyright (c) 2024 Carlos Gon√ßalves (https://www.linkedin.com/in/carlosmogoncalves/)
 * Likely open-source, so copy at will, bugs will be yours as well.
 */
package pt.sweranker.persistence.entities.localisation;

import java.io.Serializable;
import java.util.Objects;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

@Entity
@Table(name = "countries")
public class Country implements Serializable {

    /**
     * Auto-generated by IDE
     */
    private static final long serialVersionUID = 414674185345586611L;

    @Id
    @SequenceGenerator(
        sequenceName = "country_id_seq",
        allocationSize = 1,
        initialValue = 1,
        name = "COUNTRIES_SEQUENCE")
    @GeneratedValue(
        strategy = GenerationType.SEQUENCE,
        generator = "COUNTRIES_SEQUENCE")
    private Long id;

    @Column
    private String alpha2Code;

    @Column
    @OneToOne(fetch = FetchType.LAZY)
    private TextContent name;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getAlpha2Code() {
        return alpha2Code;
    }

    public void setAlpha2Code(String alpha2Code) {
        this.alpha2Code = alpha2Code;
    }

    public TextContent getName() {
        return name;
    }

    public void setName(TextContent name) {
        this.name = name;
    }

    @Override
    public String toString() {
        return "Country [id=" + id + ", alpha2Code=" + alpha2Code + ", name=" + name + "]";
    }

    @Override
    public int hashCode() {
        return Objects.hash(alpha2Code, id, name);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        Country other = (Country) obj;
        return Objects.equals(alpha2Code, other.alpha2Code) && Objects.equals(id, other.id) && Objects.equals(name, other.name);
    }

}
