insert into KnowledgeAreas(id, image) values (1 ,'http://www.images.com/ka_software_requirements');
insert into KnowledgeAreas(id, image) values (2 ,'http://www.images.com/ka_software_design');
insert into KnowledgeAreas(id, image) values (3 ,'http://www.images.com/ka_software_construction');
insert into KnowledgeAreas(id, image) values (4 ,'http://www.images.com/ka_software_testing');
insert into KnowledgeAreas(id, image) values (5 ,'http://www.images.com/ka_software_maintenance');
insert into KnowledgeAreas(id, image) values (6 ,'http://www.images.com/ka_software_config_management');
insert into KnowledgeAreas(id, image) values (7 ,'http://www.images.com/ka_software_engineering_management');
insert into KnowledgeAreas(id, image) values (8 ,'http://www.images.com/ka_software_engineering_process');
insert into KnowledgeAreas(id, image) values (9 ,'http://www.images.com/ka_software_models_methods');
insert into KnowledgeAreas(id, image) values (10,'http://www.images.com/ka_software_quality');
insert into KnowledgeAreas(id, image) values (11,'http://www.images.com/ka_software_engineering_professional_practice');
insert into KnowledgeAreas(id, image) values (12,'http://www.images.com/ka_software_economics');
insert into KnowledgeAreas(id, image) values (13,'http://www.images.com/ka_computing_foundations');
insert into KnowledgeAreas(id, image) values (14,'http://www.images.com/ka_mathematical_foundations');
insert into KnowledgeAreas(id, image) values (15,'http://www.images.com/ka_engineering_foundations');
insert into KnowledgeAreas(id, image) values (16,'http://www.images.com/ka_other');
                                                                                                   
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (1 , 'PT_PT', 'Requisitos de Software', 'A AC “Requisitos de Software” trata do levantamento, análise, especificação e validação dos requisitos bem como a gestão dos mesmos durante todo o ciclo de vida de um produto de software.\n\nOs requisitos de software são definidos genericamente como:\na) o conjunto de condições/necessidades que o software deve satisfazer de modo a atingir um determinado objectivo;\nb) as restrições à sua concepção e funcionamento.\n\nOs tópicos desta AC detalham a maneira sistemática como a Engenharia de Software deve tratar os Requisitos. Todos os conceitos que esta área engloba são usados no Processo do Ciclo de Vida do Software chamado “Análise de Requisitos de Software” que, apesar de ser frequentemente associado ao período inicial do desenvolvimento de software é uma actividade que se prolonga ao longo do ciclo de vida de um produto de software.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (2 , 'PT_PT', 'Desenho de Software','A AC “Desenho de Software” é o processo de definir a arquitectura, os componentes, interfaces e outras características do software assim como o resultado desse mesmo processo.\n\nComo parte do ciclo de vida do software é um processo no qual os requisitos são analisados de modo a produzir uma descrição da estrutura interna do software que servirá de base à sua construção. O resultado deste processo descreve a Arquitectura do Software, ou seja, como o software é decomposto e organizado em componentes e as interfaces entre esses componentes.\n\nDurante o processo de Desenho, os engenheiros produzem vários modelos que formam uma espécie de planta (ou diagrama) da solução a ser implementada. Modelos estes que podem ser avaliados de modo a verificar se efectivamente respondem aos requisitos do produto.\n\nApesar da similaridade do termo, Software Design não se refere apenas à construção dos componentes gráficos do software, sendo essa actividade apenas uma pequena subparte da muito mais abrangente AC Desenho de Software.'); 
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (3 , 'PT_PT', 'Construção de Software', 'A Construção de Software refere-se à criação detalhada de software através de uma combinação de codificação (também conhecido como programação), verificação, teste e debugging. Por outras palavras, esta AC detalha o conjunto de habilidades que um engenheiro deve possuir de modo a efectivamente construir metodicamente artefactos de software.\n\nA Construção de Software tem uma forte ligação com o Desenho de Software e com o Teste de Software, já que a construção, enquanto processo utiliza como fonte os artefactos resultantes do processo de Desenho e alimenta o processo de Teste.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (4 , 'PT_PT', 'Teste de Software', 'O Teste de Software consiste no conjunto de conhecimentos que o engenheiro de software deve dominar para executar testes ao software.\n\nEnquanto actividade, o Teste consiste na verificação dinâmica que um programa providencia os comportamentos esperados para um conjunto finito de casos de teste adequadamente escolhidos a partir do domínio de execuções tipicamente infinito.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (5 , 'PT_PT', 'Manutenção de Software', 'A Manutenção de Software é o conjunto das actividades necessárias para providenciar um suporte eficaz do software. Isto pressupõe uma modificação sistemática do software após a sua entrega/publicação de modo a corrigir falhas, melhorar o seu desempenho ou mesmo alterações/incrementos de funcionalidade.\n\nA Manutenção tem ganho um relevo crescente agora que as empresas tentam retirar o máximo do seu investimento em software ao prolongar a vida útil dos seus produtos de software.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (6 , 'PT_PT', 'Gestão de Configurações de Software', 'A Gestão de Configurações de Software é a tarefa de identificar as configurações de um software em pontos distintos no tempo com o objectivo de controlar sistematicamente as mudanças no mesmo ao longo do seu ciclo de vida.\n\nCom a utilização de ferramentas como controlos de versões e baselines (conjunto fixo de configurações num determinado ponto no tempo) é assim possível por um lado, em caso de problemas, determinar o que foi alterado e por quem e por fim e corrigir, e por outro, em caso de estabilidade do software, replicar a sua configuração controladamente.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (7 , 'PT_PT', 'Gestão de Engenharia de Software' , 'A Gestão de Engenharia de Software a aplicação de actividades de gestão (como planeamento, coordenação, medição, monitorização, controlo e reporte) com a finalidade de garantir que os produtos e serviços de software são entregues eficazmente, eficientemente e para o benefício dos stakeholders.\n\nA gestão de projectos de software engloba um conjunto de habilidades com impacto decisivo na sua concretização sistematizada.\n\nEntre os diferentes aspectos que um engenheiro tem que gerir num projecto de software encontram-se a aplicação de normas específicas da organização a que pertence, a gestão de recursos humanos (seja a nível de contratações, treino, progressão de carreiras), gestão de comunicação com uma equipa e gestão de custos.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (8 , 'PT_PT', 'Processo de Engenharia de Software', 'O Processo de Engenharia de Software é a AC que concerne sobre as actividades de trabalho cumpridas por um engenheiro de software com a finalidade de desenvolver, manter e operar software.\nExemplos destas actividades são requisitos, desenho, construção, teste e gestão de configurações, entre outos.\n\nOs processos de software são especificados com vários objectivos tais como: a facilitação da compreensão humana, comunicação e coordenação; auxiliar a gestão de projectos de software; medir e melhorar a qualidade do software duma maneira eficiente; suportar a melhoria do processo e providenciar uma base para o suporte automático da execução do processo.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (9 , 'PT_PT', 'Modelos e Métodos de Engenharia de Software', 'Modelos e Métodos de Engenharia de Software são ferramentas que impõem estrutura na engenharia de software com o objectivo de tornar essa actividade sistemática, repetível e no geral mais propensa ao sucesso.\n\nOs modelos providenciam uma abordagem à solução de problemas, uma notação e procedimentos para a análise e construção de software ao passo que os métodos providenciam uma abordagem à especificação, desenho, construção, teste e verificação sistemáticas do software e seus produtos de trabalho.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (10, 'PT_PT', 'Qualidade de Software', 'A Qualidade de Software é a capacidade de um produto de software satisfazer as necessidades enunciadas ou implicadas sob determinadas condições, assim como, até onde o produto de software responde aos requisitos estabelecidos – a qualidade depende assim de o quão precisamente os requisitos estabelecidos representam as necessidades, desejos e expectativas dos stakeholders.Por poucas palavras, a Qualidade do software é o reflexo de quão bem um produto de software responde aos requisitos do mesmo produto.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (11, 'PT_PT', 'Prática Profissional de Engenharia de Software', 'A Prática Profissional de Engenharia de Software diz respeito ao conhecimento, habilidades e atitudes que um engenheiro de software deve possuir para praticar a engenharia de software duma forma profissional, responsável e ética.\n\nDevido ao impacto cada vez mais generalizado que o software tem na vida das pessoas, os engenheiros têm que possuir um conjunto de características profissionais e pessoais que lhe permita desenvolver a sua actividade duma forma constantemente criteriosa resultando na criação de software com características conhecidas e de confiança.\n\nA prática profissional significa assim um modo de conduzir um serviço com a finalidade de atingir um certo standard ou critério em, não só o processo de executar o serviço como no produto final desse mesmo serviço.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (12, 'PT_PT', 'Economia de Engenharia de Software', 'A Economia de Engenharia de Software trata da tomada de decisões relacionadas com a Engenharia de Software num contexto de negócio. Isto advém do relacionamento directo entre o sucesso de um produto ou serviço de software e uma boa gestão de negócios.\n\nA Economia é o estudo do valor, custos, recursos e o relacionamento entre eles sob um determinado contexto.Também na disciplina de Engenharia de Software, tanto as actividades com o software resultante têm atributos económicos (têm custos, exigem recursos e têm valor).\n\nA economia em engenharia de software providencia então uma maneira de estudar os atributos do software e os seus processos de forma a relacioná-los sistematicamente com medidas económicas com a finalidade de tomar melhores decisões sobre os mesmos.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (13, 'PT_PT', 'Fundações de Computação' , 'A AC Fundações de Computação debruça-se sobre o ambiente de desenvolvimento e de operação no qual o software evolui e é executado – o computador. Isto ocorre pelo simples facto de o software não existir no vácuo nem poder ser executado sem o recurso a um computador – este juntamente com os seus componentes são o núcleo do ambiente onde o software corre.\n\nA disciplina de Engenharia de Software assenta sobre a Ciência da Computação e como tal, a sua importância é absolutamente inestimável e fulcral para o seu corpo de conhecimento. A um engenheiro de software é necessário conhecimentos sobre o computador: o seu hardware, software, tipos de computadores, paradigmas de programação, redes de computadores, compiladores, bases de dados, etc.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (14, 'PT_PT', 'Fundações de Matemática', 'A AC Fundações de Matemática advém da ligação intrínseca entre as disciplinas de Engenhara e Matemática. Na Engenharia de Software no entanto, esta ligação existe mais a um nível da essência da lógica e raciocínio e não tanto de aritmética (sobre os números).\n\nA Matemática é uma disciplina sobre o estudo formal dos sistemas. A sua intervenção a nível da engenharia de software tem uma influência directa nas técnicas de identificação de um conjunto de regras para o raciocínio no contexto de sistemas em estudo. As suas vertentes de linguagem e lógica são também importantes de modo descrever provas matemáticas sobre certos problemas e desenvolver uma solução algorítmica para os mesmos.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (15, 'PT_PT', 'Fundações de Engenharia', 'As Fundações da Engenharia é uma AC que advém do facto da Engenharia de Software ser uma disciplina de Engenharia. Tal como mencionado anteriormente, uma engenharia é definida como “a aplicação de uma abordagem sistemática, disciplinada e quantificável a estruturas, máquinas, produtos, sistemas ou processos.\n\nÉ a diferença entre este enunciado e uma outra abordagem mais empírica que permite reconhecer a Engenharia de Software como uma engenharia de plena legitimidade.Como tal, esta AC aborda os aspectos que se aplicam à engenharia de software e outras disciplinas de engenharia, tais como medição, técnicas experimentais ou análise estatística.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (16, 'PT_PT', 'Outra', 'Nenhuma Área do Conhecimento de Engenharia de Software');
                                                                                                   
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (1 , 'EN_UK', 'Software Requirements', 'A AC “Requisitos de Software” trata do levantamento, análise, especificação e validação dos requisitos bem como a gestão dos mesmos durante todo o ciclo de vida de um produto de software.\n\nOs requisitos de software são definidos genericamente como:\na) o conjunto de condições/necessidades que o software deve satisfazer de modo a atingir um determinado objectivo;\nb) as restrições à sua concepção e funcionamento.\n\nOs tópicos desta AC detalham a maneira sistemática como a Engenharia de Software deve tratar os Requisitos. Todos os conceitos que esta área engloba são usados no Processo do Ciclo de Vida do Software chamado “Análise de Requisitos de Software” que, apesar de ser frequentemente associado ao período inicial do desenvolvimento de software é uma actividade que se prolonga ao longo do ciclo de vida de um produto de software.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (2 , 'EN_UK', 'Software Desing','A AC “Desenho de Software” é o processo de definir a arquitectura, os componentes, interfaces e outras características do software assim como o resultado desse mesmo processo.\n\nComo parte do ciclo de vida do software é um processo no qual os requisitos são analisados de modo a produzir uma descrição da estrutura interna do software que servirá de base à sua construção. O resultado deste processo descreve a Arquitectura do Software, ou seja, como o software é decomposto e organizado em componentes e as interfaces entre esses componentes.\n\nDurante o processo de Desenho, os engenheiros produzem vários modelos que formam uma espécie de planta (ou diagrama) da solução a ser implementada. Modelos estes que podem ser avaliados de modo a verificar se efectivamente respondem aos requisitos do produto.\n\nApesar da similaridade do termo, Software Design não se refere apenas à construção dos componentes gráficos do software, sendo essa actividade apenas uma pequena subparte da muito mais abrangente AC Desenho de Software.'); 
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (3 , 'EN_UK', 'Software Construction', 'A Construção de Software refere-se à criação detalhada de software através de uma combinação de codificação (também conhecido como programação), verificação, teste e debugging. Por outras palavras, esta AC detalha o conjunto de habilidades que um engenheiro deve possuir de modo a efectivamente construir metodicamente artefactos de software.\n\nA Construção de Software tem uma forte ligação com o Desenho de Software e com o Teste de Software, já que a construção, enquanto processo utiliza como fonte os artefactos resultantes do processo de Desenho e alimenta o processo de Teste.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (4 , 'EN_UK', 'Software Testing', 'O Teste de Software consiste no conjunto de conhecimentos que o engenheiro de software deve dominar para executar testes ao software.\n\nEnquanto actividade, o Teste consiste na verificação dinâmica que um programa providencia os comportamentos esperados para um conjunto finito de casos de teste adequadamente escolhidos a partir do domínio de execuções tipicamente infinito.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (5 , 'EN_UK', 'Software Maintenance', 'A Manutenção de Software é o conjunto das actividades necessárias para providenciar um suporte eficaz do software. Isto pressupõe uma modificação sistemática do software após a sua entrega/publicação de modo a corrigir falhas, melhorar o seu desempenho ou mesmo alterações/incrementos de funcionalidade.\n\nA Manutenção tem ganho um relevo crescente agora que as empresas tentam retirar o máximo do seu investimento em software ao prolongar a vida útil dos seus produtos de software.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (6 , 'EN_UK', 'Software Configuration Management', 'A Gestão de Configurações de Software é a tarefa de identificar as configurações de um software em pontos distintos no tempo com o objectivo de controlar sistematicamente as mudanças no mesmo ao longo do seu ciclo de vida.\n\nCom a utilização de ferramentas como controlos de versões e baselines (conjunto fixo de configurações num determinado ponto no tempo) é assim possível por um lado, em caso de problemas, determinar o que foi alterado e por quem e por fim e corrigir, e por outro, em caso de estabilidade do software, replicar a sua configuração controladamente.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (7 , 'EN_UK', 'Software Engineering Management' , 'A Gestão de Engenharia de Software a aplicação de actividades de gestão (como planeamento, coordenação, medição, monitorização, controlo e reporte) com a finalidade de garantir que os produtos e serviços de software são entregues eficazmente, eficientemente e para o benefício dos stakeholders.\n\nA gestão de projectos de software engloba um conjunto de habilidades com impacto decisivo na sua concretização sistematizada.\n\nEntre os diferentes aspectos que um engenheiro tem que gerir num projecto de software encontram-se a aplicação de normas específicas da organização a que pertence, a gestão de recursos humanos (seja a nível de contratações, treino, progressão de carreiras), gestão de comunicação com uma equipa e gestão de custos.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (8 , 'EN_UK', 'Software Engineering Process', 'O Processo de Engenharia de Software é a AC que concerne sobre as actividades de trabalho cumpridas por um engenheiro de software com a finalidade de desenvolver, manter e operar software.\nExemplos destas actividades são requisitos, desenho, construção, teste e gestão de configurações, entre outos.\n\nOs processos de software são especificados com vários objectivos tais como: a facilitação da compreensão humana, comunicação e coordenação; auxiliar a gestão de projectos de software; medir e melhorar a qualidade do software duma maneira eficiente; suportar a melhoria do processo e providenciar uma base para o suporte automático da execução do processo.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (9 , 'EN_UK', 'Software Engineering Methods and Models', 'Modelos e Métodos de Engenharia de Software são ferramentas que impõem estrutura na engenharia de software com o objectivo de tornar essa actividade sistemática, repetível e no geral mais propensa ao sucesso.\n\nOs modelos providenciam uma abordagem à solução de problemas, uma notação e procedimentos para a análise e construção de software ao passo que os métodos providenciam uma abordagem à especificação, desenho, construção, teste e verificação sistemáticas do software e seus produtos de trabalho.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (10, 'EN_UK', 'Software Quality', 'A Qualidade de Software é a capacidade de um produto de software satisfazer as necessidades enunciadas ou implicadas sob determinadas condições, assim como, até onde o produto de software responde aos requisitos estabelecidos – a qualidade depende assim de o quão precisamente os requisitos estabelecidos representam as necessidades, desejos e expectativas dos stakeholders.Por poucas palavras, a Qualidade do software é o reflexo de quão bem um produto de software responde aos requisitos do mesmo produto.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (11, 'EN_UK', 'Software Engineering Professional Practice', 'A Prática Profissional de Engenharia de Software diz respeito ao conhecimento, habilidades e atitudes que um engenheiro de software deve possuir para praticar a engenharia de software duma forma profissional, responsável e ética.\n\nDevido ao impacto cada vez mais generalizado que o software tem na vida das pessoas, os engenheiros têm que possuir um conjunto de características profissionais e pessoais que lhe permita desenvolver a sua actividade duma forma constantemente criteriosa resultando na criação de software com características conhecidas e de confiança.\n\nA prática profissional significa assim um modo de conduzir um serviço com a finalidade de atingir um certo standard ou critério em, não só o processo de executar o serviço como no produto final desse mesmo serviço.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (12, 'EN_UK', 'Software Engineering Economics', 'A Economia de Engenharia de Software trata da tomada de decisões relacionadas com a Engenharia de Software num contexto de negócio. Isto advém do relacionamento directo entre o sucesso de um produto ou serviço de software e uma boa gestão de negócios.\n\nA Economia é o estudo do valor, custos, recursos e o relacionamento entre eles sob um determinado contexto.Também na disciplina de Engenharia de Software, tanto as actividades com o software resultante têm atributos económicos (têm custos, exigem recursos e têm valor).\n\nA economia em engenharia de software providencia então uma maneira de estudar os atributos do software e os seus processos de forma a relacioná-los sistematicamente com medidas económicas com a finalidade de tomar melhores decisões sobre os mesmos.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (13, 'EN_UK', 'Computing Foundations' , 'A AC Fundações de Computação debruça-se sobre o ambiente de desenvolvimento e de operação no qual o software evolui e é executado – o computador. Isto ocorre pelo simples facto de o software não existir no vácuo nem poder ser executado sem o recurso a um computador – este juntamente com os seus componentes são o núcleo do ambiente onde o software corre.\n\nA disciplina de Engenharia de Software assenta sobre a Ciência da Computação e como tal, a sua importância é absolutamente inestimável e fulcral para o seu corpo de conhecimento. A um engenheiro de software é necessário conhecimentos sobre o computador: o seu hardware, software, tipos de computadores, paradigmas de programação, redes de computadores, compiladores, bases de dados, etc.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (14, 'EN_UK', 'Mathematical Foundations', 'A AC Fundações de Matemática advém da ligação intrínseca entre as disciplinas de Engenhara e Matemática. Na Engenharia de Software no entanto, esta ligação existe mais a um nível da essência da lógica e raciocínio e não tanto de aritmética (sobre os números).\n\nA Matemática é uma disciplina sobre o estudo formal dos sistemas. A sua intervenção a nível da engenharia de software tem uma influência directa nas técnicas de identificação de um conjunto de regras para o raciocínio no contexto de sistemas em estudo. As suas vertentes de linguagem e lógica são também importantes de modo descrever provas matemáticas sobre certos problemas e desenvolver uma solução algorítmica para os mesmos.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (15, 'EN_UK', 'Engineering Foundations', 'As Fundações da Engenharia é uma AC que advém do facto da Engenharia de Software ser uma disciplina de Engenharia. Tal como mencionado anteriormente, uma engenharia é definida como “a aplicação de uma abordagem sistemática, disciplinada e quantificável a estruturas, máquinas, produtos, sistemas ou processos.\n\nÉ a diferença entre este enunciado e uma outra abordagem mais empírica que permite reconhecer a Engenharia de Software como uma engenharia de plena legitimidade.Como tal, esta AC aborda os aspectos que se aplicam à engenharia de software e outras disciplinas de engenharia, tais como medição, técnicas experimentais ou análise estatística.');
insert into KnowledgeAreaTranslations(knowledgeAreaId, language, name, description) values (16, 'EN_UK', 'Other', 'Nenhuma Área do Conhecimento de Engenharia de Software');


insert into Topics(id,knowledgeareaid) values (1 , 1); 
insert into Topics(id,knowledgeareaid) values (2 , 1); 
insert into Topics(id,knowledgeareaid) values (3 , 1); 
insert into Topics(id,knowledgeareaid) values (4 , 1); 
insert into Topics(id,knowledgeareaid) values (5 , 1); 
insert into Topics(id,knowledgeareaid) values (6 , 1); 
insert into Topics(id,knowledgeareaid) values (7 , 1); 

insert into Topics(id,knowledgeareaid) values (8 , 2); 
insert into Topics(id,knowledgeareaid) values (9 , 2); 
insert into Topics(id,knowledgeareaid) values (10, 2);  
insert into Topics(id,knowledgeareaid) values (11, 2); 
insert into Topics(id,knowledgeareaid) values (12, 2);
insert into Topics(id,knowledgeareaid) values (13, 2); 
insert into Topics(id,knowledgeareaid) values (14, 2);
insert into Topics(id,knowledgeareaid) values (15, 2);
                                                   
insert into Topics(id,knowledgeareaid) values (16, 3);
insert into Topics(id,knowledgeareaid) values (17, 3);
insert into Topics(id,knowledgeareaid) values (18, 3);
insert into Topics(id,knowledgeareaid) values (19, 3);
insert into Topics(id,knowledgeareaid) values (20, 3);

insert into Topics(id,knowledgeareaid) values (21, 4);
insert into Topics(id,knowledgeareaid) values (22, 4);
insert into Topics(id,knowledgeareaid) values (23, 4);
insert into Topics(id,knowledgeareaid) values (24, 4);
insert into Topics(id,knowledgeareaid) values (25, 4);
insert into Topics(id,knowledgeareaid) values (26, 4);

insert into Topics(id,knowledgeareaid) values (27, 5);
insert into Topics(id,knowledgeareaid) values (28, 5);
insert into Topics(id,knowledgeareaid) values (29, 5);
insert into Topics(id,knowledgeareaid) values (30, 5);
insert into Topics(id,knowledgeareaid) values (31, 5);

insert into Topics(id,knowledgeareaid) values (32, 6);
insert into Topics(id,knowledgeareaid) values (33, 6);
insert into Topics(id,knowledgeareaid) values (34, 6);
insert into Topics(id,knowledgeareaid) values (35, 6);
insert into Topics(id,knowledgeareaid) values (36, 6);
insert into Topics(id,knowledgeareaid) values (37, 6);
insert into Topics(id,knowledgeareaid) values (38, 6);

insert into Topics(id,knowledgeareaid) values (39, 7);
insert into Topics(id,knowledgeareaid) values (40, 7);
insert into Topics(id,knowledgeareaid) values (41, 7);
insert into Topics(id,knowledgeareaid) values (42, 7);
insert into Topics(id,knowledgeareaid) values (43, 7);
insert into Topics(id,knowledgeareaid) values (44, 7);
insert into Topics(id,knowledgeareaid) values (45, 7);

insert into Topics(id,knowledgeareaid) values (46, 8);
insert into Topics(id,knowledgeareaid) values (47, 8);
insert into Topics(id,knowledgeareaid) values (48, 8);
insert into Topics(id,knowledgeareaid) values (49, 8);
insert into Topics(id,knowledgeareaid) values (50, 8);

insert into Topics(id,knowledgeareaid) values (51, 9);
insert into Topics(id,knowledgeareaid) values (52, 9);
insert into Topics(id,knowledgeareaid) values (53, 9);
insert into Topics(id,knowledgeareaid) values (54, 9);

insert into Topics(id,knowledgeareaid) values (55, 10);
insert into Topics(id,knowledgeareaid) values (56, 10);
insert into Topics(id,knowledgeareaid) values (57, 10);
insert into Topics(id,knowledgeareaid) values (58, 10);

insert into Topics(id,knowledgeareaid) values (59, 11);
insert into Topics(id,knowledgeareaid) values (60, 11);
insert into Topics(id,knowledgeareaid) values (61, 11);

insert into Topics(id,knowledgeareaid) values (62, 12);
insert into Topics(id,knowledgeareaid) values (63, 12);
insert into Topics(id,knowledgeareaid) values (64, 12);
insert into Topics(id,knowledgeareaid) values (65, 12);
insert into Topics(id,knowledgeareaid) values (66, 12);

insert into Topics(id,knowledgeareaid) values (67, 13);
insert into Topics(id,knowledgeareaid) values (68, 13);
insert into Topics(id,knowledgeareaid) values (69, 13);
insert into Topics(id,knowledgeareaid) values (70, 13);
insert into Topics(id,knowledgeareaid) values (71, 13);
insert into Topics(id,knowledgeareaid) values (72, 13);
insert into Topics(id,knowledgeareaid) values (73, 13);
insert into Topics(id,knowledgeareaid) values (74, 13);
insert into Topics(id,knowledgeareaid) values (75, 13);
insert into Topics(id,knowledgeareaid) values (76, 13);
insert into Topics(id,knowledgeareaid) values (77, 13);
insert into Topics(id,knowledgeareaid) values (78, 13);
insert into Topics(id,knowledgeareaid) values (79, 13);
insert into Topics(id,knowledgeareaid) values (80, 13);
insert into Topics(id,knowledgeareaid) values (81, 13);
insert into Topics(id,knowledgeareaid) values (82, 13);
insert into Topics(id,knowledgeareaid) values (83, 13);

insert into Topics(id,knowledgeareaid) values (84, 14);
insert into Topics(id,knowledgeareaid) values (85, 14);
insert into Topics(id,knowledgeareaid) values (86, 14);
insert into Topics(id,knowledgeareaid) values (87, 14);
insert into Topics(id,knowledgeareaid) values (88, 14);
insert into Topics(id,knowledgeareaid) values (89, 14);
insert into Topics(id,knowledgeareaid) values (90, 14);
insert into Topics(id,knowledgeareaid) values (91, 14);
insert into Topics(id,knowledgeareaid) values (92, 14);
insert into Topics(id,knowledgeareaid) values (93, 14);
insert into Topics(id,knowledgeareaid) values (94, 14);

insert into Topics(id,knowledgeareaid) values (95 , 15);
insert into Topics(id,knowledgeareaid) values (96 , 15);
insert into Topics(id,knowledgeareaid) values (97 , 15);
insert into Topics(id,knowledgeareaid) values (98 , 15);
insert into Topics(id,knowledgeareaid) values (99 , 15);
insert into Topics(id,knowledgeareaid) values (100, 15);
insert into Topics(id,knowledgeareaid) values (101, 15);

insert into Topics(id,knowledgeareaid) values (102, 16);







insert into TopicTranslations(topicId, language, name, description) values (1 ,'PT_PT', 'Fundamentos de Requisitos de Software', 'Sobre a defininição do que é um requisito;\n\na diferença entre um requisito do produto e um requisito do processo;\n\na diferença entre requisitos funcionais e não-funcionais;\n\nrequisitos inter-dependentes;\n\ncomo classificar quantitativamente requisitos;\n\ndiferença entre requisitos de sistema e de software.' );
insert into TopicTranslations(topicId, language, name, description) values (2 ,'PT_PT', 'Processo de Requisitos', 'Sobre a natureza contínua do processo de requisitos e a sua natureza moldável ao contexto do projecto ou organização;\n\nos diferentes actores do processos (frequentemente conhecidos como “stakeholders”);\n\ncomo gerir um processo de requisitos e como avaliar a sua qualidade e ainda como o melhorar.');
insert into TopicTranslations(topicId, language, name, description) values (3 ,'PT_PT', 'Levantamento de Requisitos', 'Sobre a origem dos requisitos (como Conhecimento próprio do Domínio, stakeholders, regras do negócio, etc.) e as técnicas para os coleccionar eficazmente (tais como entrevistas, cenários, protótipos, reuniões, etc.).');
insert into TopicTranslations(topicId, language, name, description) values (4 ,'PT_PT', 'Análise de Requisitos', 'Sobre como classificar requisitos quanto ao seu tipo, importância, estabilidade ou extensão;\n\nmodelação conceptual (tal como “Use Cases”, modelos de dados, modelos de estados, etc.).');
insert into TopicTranslations(topicId, language, name, description) values (5 ,'PT_PT', 'Especificação de Requisitos', 'Sobre a produção de um conjunto de documentos sobre os requisitos que possa ser sistematicamente revisto, avaliado e aprovado. Estes documentos são: a Definição do Sistema, Especificação dos Requisitos do Sistema e Especificação dos Requisitos do Software (derivados dos requisitos do sistema).');
insert into TopicTranslations(topicId, language, name, description) values (6 ,'PT_PT', 'Validação de Requisitos', 'Sobre as técnicas de validação dos requisitos levantados, tais como: Revisão por terceiros (“peer-review”), prototipagem, validação de modelos e testes de aceitação.');
insert into TopicTranslations(topicId, language, name, description) values (7 ,'PT_PT', 'Considerações Práticas', 'Sobre as particularidades práticas dos requisitos;\n\na natureza iterativa do processo de requisitos;\n\na gestão de alterações dos requisitos (como um todo ou em apenas alguns dos seus atributos);\n\nrastreamento de requisitos;\n\nmedição do peso dos requisitos na eventualidade de alteração do produto.');
                                                                               
insert into TopicTranslations(topicId, language, name, description) values (8 ,'PT_PT', 'Fundamentos de Desenho de Software',  'Sobre os conceitos gerais de desenho (como objectivo, restrições, alternativas, contexto etc.);\n\no processo de desenho (diferença entre desenho arquitectural e detalhado);\n\nos principios do desenho de software (como abstracção, acoplamento, coesão, decomposição, modularização, encapsulamento, separação de interface e implementação, suficiência, completividade, etc.).'); 
insert into TopicTranslations(topicId, language, name, description) values (9 ,'PT_PT', 'Problemas-chave no Desenho de Software', 'Sobre os problemas típicos no desenho de software como concorrência: controlo de eventos;\n\npersistência de dados;\n\ndistribuição de componentes e comunicação entre si;\n\ntratamento de erros e tolerância a falhas;\n\ninteracção e apresentação;\n\nsegurança.'); 
insert into TopicTranslations(topicId, language, name, description) values (10,'PT_PT', 'Estrutura e Arquitectura de Software', 'Sobre os modos de organizar o software a vários níveis de abstracção desde a macro-arquitectura até ao desenho detalhado do código;\n\nos diferentes estilos de arquitectura tais como construção por camadas, sistemas distribuídos (Cliente-Servidor, Three-Tiers, Broker), sistemas interactivos (Model-View-Controller, Presentation-Abstraction-Control), sistemas adaptáveis (microkernel ou reflexão) e outros;\n\nDesign Patterns (como “builder”, “factory”, “adapter”; “bridge”, “iterator”, “strategy”, etc.);\n\no cariz decisório do processo de design;\n\nfamilías de programas e “frameworks” de software.'); 
insert into TopicTranslations(topicId, language, name, description) values (11,'PT_PT', 'Desenho de Interface com o Utilizador', 'Sobre a eficaz comunicação com o utilizador do software;\n\nprincípios base de UI (facilidade de aprendizagem, familiaridade, consistência, surpresa mínima, diversidade de utilização, etc.);\n\nlidar com problemas comuns (interacção com utilizador e  apresentação de informação);\n\nas modalidades típicas de interacção (pergunta-resposta, manipulação directa, selecção em menus, formulários, linguagens de comandos, linguagem natural);\n\ncomo apresentar a informação (número de cores, mudanças de cores, “colour-coding”, visualização para pessoas com necessidades especiais);\n\no processo de design de UI (análise de utilização, prototipagem de software, avaliação da interface com o utilizador desenvolvida);\n\nadaptar a UI para localização e internacionalização;\n\nmetáforas e modelos conceptuais (tal como utilização de ícones reconhecidos universalmente para diversas acções comuns, tal como usar uma roldana para representar as definições).'); 
insert into TopicTranslations(topicId, language, name, description) values (12,'PT_PT', 'Análise de Qualidade e Avaliação', 'Sobre os atributos de qualidade do desenho (tais como portabilidade, testabilidade, robustez, performance, segurança, reutilizável, etc.);\n\ntécnicas de avaliação de qualidade (como revista de design por terceiros, análise estática formal – com modelos matemáticos -  ou informal, simulação ou prototipagem);\n\nmedidas de software para o seu tamanho, estrutura ou qualidade.'); 
insert into TopicTranslations(topicId, language, name, description) values (13,'PT_PT', 'Notações de Desenho de Software', 'Sobre a representação do desenho em diferentes artefactos universalmente compreendidos;\n\ndescrições de estrutura (diagramas de classe e objectos, diagramas de componentes, “class responsability cards”, diagramas de Entidade-Relacionamento, linguagens de descrição de interfaces, etc.);\n\ndescrições de comportamentos e dinâmicas entre componentes (diagramas de actividade, diagramas de comunicação, diagramas de fluxo de dados, tabelas e diagramas de decisão, diagramas de sequência, diagramas de transição de estados, pseudo-código, etc.).'); 
insert into TopicTranslations(topicId, language, name, description) values (14,'PT_PT', 'Estratégias e Métodos de Desenho de Software', 'Sobre como desenhar um sistema num ou mais paradigmas bem definidos, como Orientado a Funções, Orientado a Objectos, Centrado em Estruturas de Dados e Centrado em Componentes;\n\nas estratégias gerais de desenho como “divide-and-conquer”, “top-down”, “bottom-up”, etc.'); 
insert into TopicTranslations(topicId, language, name, description) values (15,'PT_PT', 'Ferramentas de Desenho de Software','Sobre ferramentas de ajuda à criação de artefactos do desenho de software, tipicamente também software, que consiga, por exemplo, criar modelos e diagramas ou possibilite uma análise de qualidade de modelos.'); 
                                                                
insert into TopicTranslations(topicId, language, name, description) values (16,'PT_PT', 'Fundamentos de Construção de Software', 'Sobre os conceitos fundamentais da construção de software, que são: Minimização de Complexidade, Antecipação de Mudanças, Construção para Verificação, Reutilização e Standards de Construção (relativo às convenções das linguagens de programação usadas, tal como nomenclatura de variáveis ou identação, etc.).' ); 
insert into TopicTranslations(topicId, language, name, description) values (17,'PT_PT', 'Gestão de Construção', 'Sobre como gerir um processo de construção através de Modelos de Ciclo de Vida (como as metodologias lineares estilo Waterfall ou iterativas tipo Agile);\n\no planeamento da construção (qual a ordem de actividades num processo de construção – isto é altamente dependente de que Modelo de construção é usado);\n\ncomo medir o que é criado (estatísticas sobre código, calendarização, esforço – novamente diferentes medidas dependem do Modelo escolhido, e.g. esforço é uma medida típica da metodologia scrum).' );
insert into TopicTranslations(topicId, language, name, description) values (18,'PT_PT', 'Considerações Práticas', 'Sobre o cariz predominantemente prático da construção;\n\na necessidade de fazer ajustamentos ou modificações de pequena escala ao Desenho durante a construção;\n\nas linguagens necessárias para construir software - como linguagens de configuração, linguagens de scripting, linguagens de programação, linguagens visuais, etc.;\n\nas características da codificação em si (construções semânticas, estruturas de controlo, tratamento de erros, organização do código em classes, modos de documentação do código, etc.);\n\ntestes de construção (testes unitários e testes de integração);\n\ntécnicas de construção para reutilização por terceiros (tais como estruturação de bibliotecas, utilização de padrões de desenho conhecidos);\n\nreutilização de software pré-existente (recurso a bibliotecas, repositórios públicos, etc.);\n\nqualidade na construção (testes de código, debugging, assertions, programação defensiva, code reviews, etc.);\n\nintegração do código num sistema (phase integration e incremental).' );
insert into TopicTranslations(topicId, language, name, description) values (19,'PT_PT', 'Tecnologias de Construção', 'Sobre como desenhar e usar APIs;\n\nproblemas típicos de paradigmas orientados aos objectos (como polimorfismo e reflexão);\n\ntipos parametrizados e genéricos;\n\nassertions, programação por interfaces e programação defensiva;\n\ntratamento de erros;\n\nmodelos executáveis (criação de um programa compilando um modelo executável de uma linguagem de modelação);\n\nprogramação baseada em estados e baseada em tabelas;\n\nconfiguração em runtime e internacionalização;\n\nprocessamento de gramáticas de linguagens;\n\nprimitivas de concorrência (semáforos, mutexes, monitores, etc.);\n\nmiddleware (software que providencia serviços entre a camada do SO e a camada aplicacional);\n\nprogramação para sistemas distribuídos;\n\nconstrução de sistemas heterogéneos (como Processadores de Sinais Digitais ou Sistemas Embebidos);\n\nanálise de performance e tuning (escolhas de arquitecturas, estruturas de dados ou selecção de algoritmos);\n\nstandards de plataformas (por exemplo J2EE vs J2SE);\n\ntest-driven development.' );
insert into TopicTranslations(topicId, language, name, description) values (20,'PT_PT', 'Ferramentas de Construção de Software', 'Sobre todo o tipo de ferramentas (tipicamente também software) que ajudam à construção de software tais como IDEs (ambientes de desenvolvimento integrado como Eclipse, Netbeans, Visual Studio, etc);\n\nconstrutores de Interfaces Gráficas (actualmente também parte de IDEs modernos);\n\nferramentas de Testes Unitários e ainda ferramentas de profiling de código, análise de performance e slicing.' );

insert into TopicTranslations(topicId, language, name, description) values (21,'PT_PT', 'Fundamentos do Teste de Software','Sobre os conceitos fundamentais de teste;\n\ndistinção entre falta, falha, erro e defeito;\n\nescolha de casos de teste;\n\neficácia e objectivos do teste;\n\nteste para descoberta de defeitos;\n\nlimites teóricos e práticos dos testes;\n\ncenários de teste impraticáveis e o relacionamento do teste com as outras actividades do ciclo de vida do software.' );
insert into TopicTranslations(topicId, language, name, description) values (22,'PT_PT', 'Níveis de Teste', 'Sobre os diferentes níveis a que um software pode ser testado;\n\nquanto ao alvo do teste (testes unitários vs testes de integração vs testes do sistema);\n\nquanto ao objectivo do teste (testes de aceitação,  testes de instalação, testes alfa e beta;\n\ntestes de confiabilidade, testes de regressão, testes de performance, testes de segurança, testes de stress, testes back-to-back, testes de recuperação, testes de interface, testes de configuração e testes de usabilidade).' );
insert into TopicTranslations(topicId, language, name, description) values (23,'PT_PT', 'Técnicas de Teste' , 'Sobre as diferentes técnicas usadas para encontrar o maior número de falhas possíveis;\n\ntécnicas baseadas na Intuição do Engenheiro (ad hoc e testes exploratórios);\n\ntécnicas baseadas no domínio do input (particionamento equivalente, teste combinatório, teste de valores-limite, testes aleatórios);\n\ntécnicas baseadas em código (testes baseados nos fluxos de controlo do código, testes do fluxo de dados);\n\ntécnicas baseadas nas falhas (error guessing, testes de mutação);\n\ntécnicas baseadas no uso (teste ao típico perfil operacional, heurísticas de observação do utilizador);\n\ntécnicas baseadas em modelos (tabelas de decisão, máquinas de estado;\n\nespecificações formais, modelos de workflow);\n\ntécnicas baseadas na natureza da aplicação (aplicação web vs aplicação mobile, etc.);\n\ncombinação das técnicas descritas.');
insert into TopicTranslations(topicId, language, name, description) values (24,'PT_PT', 'Métricas Relacionadas com o Teste', 'Sobre as diferentes métricas usadas para avaliar a qualidade dos testes;\n\nmétricas de avaliação do programa (métricas de tamanho, falhas típicas para esse tipo de software, densidade das falhas, avaliação da confiabilidade, modelos de crescimento da confiabilidade);\n\nmétricas de avaliação dos testes realizados (cobertura total de testes, introdução de falhas, resultados das mutações).' );
insert into TopicTranslations(topicId, language, name, description) values (25,'PT_PT', 'Processo de Teste' , 'Sobre a forma de organizar as actividades, estratégias e técnicas de teste num processo controlado;\n\nconsiderações práticas (criação de guias de teste, organizadores do processo, criação de documentação de testes, test-driven development, criação de uma equipa de testes independente ou interna, estivativas de esforço e teste, definição de terminação de um testes, reutilização de testes e utilização de um padrão de testes);\n\nactividades de teste ( planeamento de teste, geração de casos de teste, desenvolvimento de ambientes de treino, execução sistemática de testes, avaliação do resultado dos mesmos, registo dos resultados ao longo do tempo, rastreamento de defeitos).');
insert into TopicTranslations(topicId, language, name, description) values (26,'PT_PT', 'Ferramentas de Teste de Software' , 'Sobre as ferramentas, tipicamente também software, que servem de auxilio à escolha realização e avaliação de testes.' );

insert into TopicTranslations(topicId, language, name, description) values (27,'PT_PT', 'Fundamentos da Manutenção de Software','Sobre os conceitos básicos, terminologia e definições de manutenção de software;\n\no papel específico de um engenheiro responsável por manutenção de software;\n\nas necessidades de manutenção (corrigir falhas, melhorar o desenho do software, adaptar a novos ambientes, etc.);\n\ncustos de manutenção do software;\n\nevolução do software como uma das finalidades de manutenção;\n\nas diferentes categorias de manutenção (correctiva, adaptativa, perfectiva e preventiva).' );
insert into TopicTranslations(topicId, language, name, description) values (28,'PT_PT', 'Problemas-chave da Manutenção de Software', 'Sobre os principais problemas que um responsável pela manutenção de software enfrenta tais como questões técnicas (compreensão limitada do software em questão, testes a um sistema em manutenção, análise de impacto da manutenção proposta, grau de modificabilidade de um sistema em produção);\n\nquestões relacionadas com a gestão do processo de manutenção (alinhar o processo de manutenção de um software com os objectivos da organização responsável, gerir e motivar responsáveis pela manutenção, outsourcing de manutenção);\n\nestimativas de custo de manutenção;\n\nmétricas de manutenção.' );
insert into TopicTranslations(topicId, language, name, description) values (29,'PT_PT', 'Processo de Manutenção', 'Sobre um ciclo de vida de uma fase de manutenção (analisar problemas, implementar as modificações, aprovar, descontinuar o produto, migrar, etc.);\n\nas actividades exclusivas de um engenheiro responsável pela manutenção (análise do estado do software, tarefas de suporte, planeamento da manutenção em termos de prazos e âmbito da manutenção, gestão da configuração do software em manutenção, garantir a qualidade do software em manutenção).');
insert into TopicTranslations(topicId, language, name, description) values (30,'PT_PT', 'Técnicas de Manutenção', 'Sobre as técnicas utilizadas para manter e/ou actualizar um software com sucesso;\n\ncompreensão do código do software;\n\ntécnicas de alteração sistemática do software (como refactoring);\n\ntécnicas de engenharia reversa de um software;\n\ntécnicas de migração de software;\n\ntécnicas e políticas de descontinuação de software.' );
insert into TopicTranslations(topicId, language, name, description) values (31,'PT_PT', 'Ferramentas de Manutenção de Software', 'Sobre as ferramentas que auxiliam à manutenção de software, tais como ferramentas de corte (slicing) de software (que isolam as partes a modificar), analisadores estáticos e dinâmicos de código;\n\nanalisadores de fluxos de dados e de dependências e ainda ferramentas de auxílio à engenharia reversa.');

insert into TopicTranslations(topicId, language, name, description) values (32,'PT_PT', 'Gestão do processo de Gestão de Configurações', 'Sobre como organizar uma gestão de configurações;\n\nquais as restrições impostas ao processo;\n\nsobre o planeamento típico de um processo de gestão de configurações (quem é o responsável, qual a calendarização do projecto, quais as ferramentas a ser usadas, que configurações providenciar a terceiros, as interacções potenciais entre o software a ser controlado e externos);\n\ndocumentação das configurações e sua gestão e utilização do mesmo como guidelines numa organização;\n\ngarantia da aplicação correcta da configurações da organização seja através da aplicação de métricas, ferramentas próprias ou simples auditorias.' );
insert into TopicTranslations(topicId, language, name, description) values (33,'PT_PT', 'Identificação de Configurações de Software', 'obre a identificação das entidades a serem sujeitas a controlo de configurações, quais os relacionamentos entre si, como definir o seu versionamento, regras de criação de uma baseline, políticas de integração de um item de software (um ficheiro, código-fonte, recursos visuais, etc) no controlo de configurações;\n\nutilização e gestão de software libraries.' );
insert into TopicTranslations(topicId, language, name, description) values (34,'PT_PT', 'Controlo de Configurações de Software', 'Sobre o controlo do fluxo normal de um processo de gestão de alterações na configuração do software, como requisição de alteração (vulgo change request), avaliação e aceitação/rejeição da alteração proposta;\n\nimplementação da alteração e seu rastreamento e por fim autorizações de desvio (da funcionalidade a alterar) ou renúncia (idem).');
insert into TopicTranslations(topicId, language, name, description) values (35,'PT_PT', 'Registo de Estado da Configuração de Software', 'Sobre o registo e relato da evolução do estado das configurações de software ao longo do tempo;\n\ncomo capturar o estado de itens de software a cada momento e como reportá-los à organização.');
insert into TopicTranslations(topicId, language, name, description) values (36,'PT_PT', 'Auditoria de Configurações de Software', 'Sobre o processo de escrutinar as configurações de software de modo a garantir que o seu funcionamento está alinhado com os requisitos especificado (como um todo ou a nível de determinada baseline), a arquitectura/desenho planeada e se está alinhado com a documentação.' );
insert into TopicTranslations(topicId, language, name, description) values (37,'PT_PT', 'Gestão de Lançamento e Entrega de Software', 'Sobre como organizar a entrega de uma ou mais versões de software;\n\ncomo executar um processo de build de software (empacotamento, distribuição de diferentes versões em simultâneo, diferentes ambientes de produção;\n\na entrega de um produto de software completo (quanto efectuar a entrega com base no estado do software, quais os restantes artefactos entregáveis – como documentação e notas de entrega).' );
insert into TopicTranslations(topicId, language, name, description) values (38,'PT_PT', 'Ferramentas de Gestão de Configurações de Software', 'Sobre os tipos de ferramentas utilizados para suportarem a eficaz gestão de configurações, tais como ferramentas de controlo de versões, ferramentas de build, ferramentas de suporte a problemas de clientes, ferramentas de controlo de workspaces para equipas de desenvolvimento, ferramentas de issue-tracking, etc.' );

insert into TopicTranslations(topicId, language, name, description) values (39,'PT_PT', 'Inicialização e Definição de Âmbito', 'Sobre como determinar e negociar requisitos de software;\n\nanálise de viabilidade (avaliação da capacidade de realizar os requisitos com base em todas as restrições a que está sujeito - como custos, tecnologias, recursos humanos, políticas, etc.);\n\nprocessos de revisão de requisitos (quais as regras acordadas com stakeholders para fazer eventuais alterações aos requisitos).');
insert into TopicTranslations(topicId, language, name, description) values (40,'PT_PT', 'Planeamento do Projecto de Software', 'Sobre como planear um projecto de software;\n\nqual o modelo de ciclo de vida de software a usar (tal como cascata, espiral ou métodos ágeis) e que ferramentas a usar para garantir a sua aplicação;\n\nescolha dos artefactos entregáveis (documentação, software instalável, etc.);\n\nestimação de custos, esforço e temporização;\n\nalocação de recursos humanos a tarefas;\n\ngestão de risco (identificação, análise de impacto, prioritização de factores de risco, desenvolvimento de estratégias de atenuação de risco, etc.);\n\ngestão da qualidade (definição de métricas de qualidade, garantir a aplicação de controlo de qualidade durante o projecto).');
insert into TopicTranslations(topicId, language, name, description) values (41,'PT_PT', 'Execução do Projecto de Software', 'Sobre a aplicação do planeamento ao desenvolvimento do projecto;\n\naplicação dos termos contratados com o receptor do software (o cliente);\n\naplicação das medições e métricas planeadas;\n\nmonitorizar e adaptar os planos consoante a evolução do projecto e em alguns casos abandonar o mesmo;\n\norganização e desenvolvimento de relatórios sobre o progresso.');
insert into TopicTranslations(topicId, language, name, description) values (42,'PT_PT', 'Revisão e Avaliação', 'Sobre o acompanhamento e avaliação periódica do projecto quanto aos objectivos e satisfação do cliente;\n\ndeterminar a satisfação do cliente quanto aos requisitos;\n\navaliação e revisão da performance dos métodos, ferramentas e recursos aplicados no projecto.');
insert into TopicTranslations(topicId, language, name, description) values (43,'PT_PT', 'Término do Projecto', 'Sobre a finalização do projecto na sua totalidade ou numa milestone;\n\ndeterminar a âmbito de “término” quer a nível total ou parcial (e.g. um número pré-acordado de requisitos implementados pode ser um término de fase assim como todos os requisitos acordados e a respectiva documentação pode ser o término total);\n\nas actividades de término de projecto (como o arquivamento de documentação, por quanto tempo manter documentação, actualização de estados de projecto, elaborar documentos de “Lições aprendidas”, etc.).');
insert into TopicTranslations(topicId, language, name, description) values (44,'PT_PT', 'Medições de Engenharia de Software', 'Sobre a aplicação de medições ao nível do projecto, processos e produtos de trabalho;\n\nestabelecimento e incentivo de medições (quais as medições, qual o âmbito, aplicação das medições pelas equipas, etc.);\n\nplaneamento de processos de medições;\n\naplicação de medições nos processos com todos os dados relevantes coleccionados e documentação das mesmas;\n\navaliação das medições e aplicação de correcções ou melhoramentos se necessário.');
insert into TopicTranslations(topicId, language, name, description) values (45,'PT_PT', 'Ferramentas de Gestão de Engenharia de Software', 'Sobre as ferramentas usadas para auxílio à gestão de um projecto de software (planeamento e acompanhamento do estado de projecto, ferramentas de gestão de risco, ferramentas de comunicação e ferramentas de medição). Estas são também tipicamente software.' );

insert into TopicTranslations(topicId, language, name, description) values (46,'PT_PT', 'Definição de Processo de Software', 'Sobre a definição daquilo que é um processo de software e o que o compõe;\n\ninputs requeridos, actividades de trabalho transformativas e os outputs gerados;\n\ndecomposição do processo em unidades de trabalho;\n\ncargos e competências;\n\ntécnicas, ferramentas e notações;\n\ngestão de processos de software, a sua eficiência para um projecto e os impactos que advenham da sua troca por outro.'  );
insert into TopicTranslations(topicId, language, name, description) values (47,'PT_PT', 'Ciclos de Vida de Software', 'Sobre as diferentes categorias de modelos de ciclos de vida do desenvolvimento de software;\n\ncategorias de processos de software, tais com processos primários (para desenvolvimento, operação e manutenção de software), processos de suporte (para gestão das configurações, controlo de qualidade, verificação e validação), processos organizacionais (treino, gestão de infra-estruturas, gestão de portefolio, etc.), processos inter-projectos (transversais a vários projectos);\n\nmodelos de ciclo de vida do software (modelos preditivos ou lineares como o modelo cascata vs modelos iterativos como o modelo espirar vs modelos ágeis de desenvolvimento como scrum);\n\nadaptação de processos de software existentes às necessidades do projecto, organização ou desenvolvimentos tecnológicos.' );
insert into TopicTranslations(topicId, language, name, description) values (48,'PT_PT', 'Avaliação e Melhoramento de Processos de Software', 'Sobre o acompanhamento do desempenho dos processos e a sua potencial alteração de modo a melhor responderem às necessidades específicas do projecto ou organização;\n\nos diferentes modelos e métodos (qualitativos que são sujeitos ao julgamento especializado ou quantitativos que são realizados com base em métricas);\n\nmodelos de melhoria iterativa de processos (como por exemplo o Plan-Do-Check-Act);\n\nsistemas de avaliação e pontuação de processos.');
insert into TopicTranslations(topicId, language, name, description) values (49,'PT_PT', 'Medidas para Processos de Software', 'Sobre as diferentes medidas e técnicas de medição usadas para os processos de software;\n\nmedidas de determinação da eficiência de um processo (como medidas de esforço, horas-homem, dias-homem, custos monetários do processo ou fase de processo) ou do produto em si;\n\na qualidade das medidas a usar para processos e produtos;\n\nrecurso a software com modelos de análise de processos que permitem testar vários parâmetros dos processos usados e determinar possíveis pontos de melhoria;\n\ntécnicas de medição de processos quantitativas (medição directa de número de defeitos, horas-homem, entre outras e respectiva análise por métodos estatísticos) e técnicas qualitativas (como questionários ou entrevistas).');
insert into TopicTranslations(topicId, language, name, description) values (50,'PT_PT', 'Ferramentas de Processos de Engenharia de Software', 'Sobre todo o tipo de ferramentas relacionadas com os processos de software, com por exemplo diagramas de BPMN, folhas de cálculo, diagramas de UML ou até software de gestão de projectos.');

insert into TopicTranslations(topicId, language, name, description) values (51,'PT_PT', 'Modelação', 'Sobre os princípios gerais de modelação de software, sendo estes “Modelar o essencial”, “Providenciar uma perspectiva sobre o problema” e “Permitir a comunicação eficaz”;\n\nas propriedades de modelos (completude, consistência e exactidão) e expressão de modelos (conceito de entidade e relacionamento e os seus significados de acordo como tipo de modelo);\n\na sintaxe e a semântica das linguagens de modelação (textuais ou gráficas);\n\nos conceitos de pré-condição, pós-condição e invariantes.');
insert into TopicTranslations(topicId, language, name, description) values (52,'PT_PT', 'Tipos de Modelos', 'Sobre os diferentes tipos de modelos usados para software;\n\nmodelos de informação (que identificam e definem um conjunto de conceitos, propriedades, relacionamentos e restrições em entidades de dados);\n\nmodelos comportamentais (identificam e definem as funções do software a ser modelado, os exemplos comuns são máquinas de estado, modelos de controlo de fluxo e modelos de fluxos de dados);\n\nmodelos estruturais (definem a composição lógica ou física das suas diferentes partes, exemplos disso são os diagramas de classe, de objectos e de packages).');
insert into TopicTranslations(topicId, language, name, description) values (53,'PT_PT', 'Análise de Modelos', 'Sobre as técnicas de inspecção crítica de modelos pelo engenheiro;\n\nanálise de completude;\n\nanálise de consistência;\n\nanálise de exactidão;\n\nrastreamento entre requisitos, modelos e funcionalidade implementada;\n\nanálise de interacção entre modelos e funcionalidade.');
insert into TopicTranslations(topicId, language, name, description) values (54,'PT_PT', 'Métodos de Engenharia de Software', 'Sobre as abordagens organizadas e sistemáticas ao desenvolvimento de software para um computador alvo;\n\nMétodos Heurísticos, que são baseados na experiência e largamente praticados pela indústria (tais como métodos de Análise Estruturada que tratam o software como um conjunto hierárquico de funções, métodos de Modelação de Dados que se focam na forma e relacionamento dos dados para organizações cujo princial activo é precisamente os dados e por fim Métodos Orientados aos Objectos, cujo software é um conjunto de objectos que representam o mundo real, encapsulam dados e têm comportamento);\n\nMétodos Formais que utilizam uma notação matemática rigorosa que permite definir, refinar, derivar e verficar software;\n\nMétodos de Prototipagem cuja finalidade é desenvolver uma pequena parte ou parte incompleta do software (normalmente a menos bem compreendida) de modo a poder refiná-la com recurso a input crítico do protótipo;\n\nMétodos Ágeis de desenvolvimento, caracterizados por desenvolvimentos iterativos curtos com alta participação de elementos da equipa (métodos como Extreme Programming, scrum ou Cristal Clear).' );
                                                                            
insert into TopicTranslations(topicId, language, name, description) values (55,'PT_PT', 'Fundamentos da Qualidade de Software', 'Sobre os princípios gerais do que define qualidade para os stakeholders;\n\na instalação de uma cultura e uma ética de trabalho orientada à qualidade;\n\no valor de desenvolver software de qualidade e o impacto que isso tem  nos custos do mesmo;\n\ncaracterísticas e modelos de qualidade a nível de processos e do produto em si;\n\ntécnicas de melhoramento de qualidade (como Plan-Do-Check-Act, kaizen ou Quality Function Deployment);\n\nconceitos de software para sistemas críticos e o impacto que a qualidade tem nestes sistemas.');
insert into TopicTranslations(topicId, language, name, description) values (56,'PT_PT', 'Processos de Gestão de Qualidade de Software', 'Sobre os processos que asseguram que produtos de software, serviços e modelos de ciclo de vida respondem aos objectivos  organizacionais de qualidade e satisfação de stakeholders;\n\na garantia de qualidade de software (vulgo Quality Assurance);\n\nverificação e validação da qualidade;\n\nrevisão e auditoria de processos e produtos de software.');
insert into TopicTranslations(topicId, language, name, description) values (57,'PT_PT', 'Considerações Práticas', 'Sobre os problemas práticos que têm um impacto na qualidade do software: o modo como os requisitos influenciam a gestão da qualidade, tais como o tipo de segurança do sistema, o ambiente físico, o orçamento do projecto, o grau de dependência do mesmo (software crítico implica um processo de qualidade elevado);\n\nos diferentes tipos de defeitos do software (erro computacional, erro humano, defeito, falta e falha);\n\nas técnicas de gestão da qualidade do software, como técnicas estáticas (análise de código-fonte, análise de design, métodos formais, etc.), técnicas dinâmicas (execução de código, simulação, debugging), teste de software executado por individuos fora da equipa de desenvolvimento para verificar a conformidade do software à sua especificação;\n\nmedição da qualidade do software (com recurso a métricas de qualidade, análise estatística, análise de tendência, etc.) com a finalidade de ter uma vista geral sobre a qualidade do produto e sobre as partes problemáticas do mesmo.' );
insert into TopicTranslations(topicId, language, name, description) values (58,'PT_PT', 'Ferramentas de Qualidade de Software', 'Sobre as ferramentas de auxílio aos processos de qualidade de software, tais como ferramentas de análise estática de sintaxe e semântica de código (tal como compiladores, Java Mission Control, etc) e ferramentas de análise dinâmica de código (como debuggers).' );
                                                                            
insert into TopicTranslations(topicId, language, name, description) values (59,'PT_PT', 'Profissionalismo', 'Sobre a aderência do engenheiro a códigos de ética, conduta profissional e práticas standard estabelecidas pela sua comunidade profissional;\n\nacreditação, certificação e licenciamento;\n\ncódigos de ética e conduta profissional definidos pela sua comunidade profissional (como o código de ética da ACM e IEEE);\n\nas sociedades profissionais e a sua função (por exemplo a IEEE ou a Ordem dos Engenheiros);\n\nos Standards de Engenharia de Software (por exemplo os múltiplos standards da IEEE para Engenharia de Software);\n\no impacto económico do software;\n\nos variados tipos de contratos de trabalho e características;\n\nas questões legais (como marcas registadas, propriedade intelectual, uso justo, cibercrime, direitos de cópia);\n\na criação de documentação e os seus trâmites;\n\nnegociações (de requisitos, funcionalidades, contratos, etc.).');
insert into TopicTranslations(topicId, language, name, description) values (60,'PT_PT', 'Dinâmica de Grupo e Psicologia', 'Sobre as questões relacionadas com trabalho em equipa e diferentes grupos de individuos como clientes ou colaboradores;\n\nquestões relacionadas com trabalho em grupo (honestidades intelectual, admissão de ignorância, admissão de erros, adaptabilidade);\n\nos factores que afectam a cognição pessoal (volume de dados, complexidade de problemas, incapacidade de exprimir os problemas, incapacidade de consultar com outros, etc.);\n\ncomo lidar com problemas complexos (trabalho em equipa, decomposição de problemas, etc.);\n\ncomo interagir com stakeholders;\n\nlidar com incerteza e ambiguidade nos problemas de desenvolvimento;\n\nlidar com problemas de multiculturalismo de equipas ou clientes.');
insert into TopicTranslations(topicId, language, name, description) values (61,'PT_PT', 'Habilidades de Comunicação', 'Sobre as capacidades de comunicação orais e de escrita do engenheiro;\n\nleitura de material técnico, compreensão e resumo;\n\nhabilidades de escrita de documentos relevantes aos processos de software (requisitos, documentação de software, contratos, etc.);\n\ncomunicação eficaz com equipas ou grupos;\n\nhabilidades de criar e executar apresentações (de ideias, de produtos, pitches, etc.).');

insert into TopicTranslations(topicId, language, name, description) values (62,'PT_PT', 'Fundamentos de Economia', 'Sobre os conceitos base de Economia;\n\nfinanças e contabilidade;\n\ncontrolo de custos;\n\ncash flow;\n\nprocessos de tomada de decisões (orientada à Economia);\n\nconceito de valorização;\n\ninflação e depreciação;\n\ntaxação (impostos);\n\nvalor temporal do dinheiro (a oscilação do valor do dinheiro ao longo do tempo);\n\neficiência económica;\n\neficácia;\n\ndefinição de produtividade.' );
insert into TopicTranslations(topicId, language, name, description) values (63,'PT_PT', 'Economia de Ciclos de Vida', 'Sobre os conceitos económicos aplicados à actividade do software ao longo do seu ciclo de vida;\n\nconceitos de produto, projecto, programa, portefolio, ciclo de vida de um produto, ciclo de vida de um projecto, propostas e tipos de propostas;\n\ndecisões de investimento;\n\nhorizonte de planeamento (sobre os custos económicos relacionados com investimentos num determinado prazo, como o tempo de vida de um produto de sotware e o seu impacto económico numa empresa);\n\nconceito de preço e estabelecimento de políticas de preços;\n\nconceito de custo e gestão de custos;\n\nmedição de performance económica;\n\ngestão do valor ganho (técnica económica que permite um controlo eficaz de custos comparando o valor já criado com o orçamento projectado e com o custo calendarizado até esse momento);\n\ndecisões de terminação de um produto baseadas em economia;\n\ndecisões de troca (troca de um software antiquado por um novo em vez de o manter) ou descontinuação (de um produto ou de actividade como um todo).');
insert into TopicTranslations(topicId, language, name, description) values (64,'PT_PT', 'Risco e Incerteza', 'Sobre os conceitos de objectivo económico, estimativas e planeamento;\n\ntécnicas de estimação (como analogias, estimação por partes, métodos estatísticos, etc.);\n\nreagir a incerteza (como utilizar estimativas de diversos âmbitos, adiar decisões finais, etc.);\n\ntécnicas de prioritização;\n\ntécnicas de tomada decisões sob risco (como árvores de decisão, análise de Monte Carlo, etc.);\n\ntécnicas de tomada de decisões sob incerteza (como Regra de Laplace, Regra de Hurwicz, etc.).');
insert into TopicTranslations(topicId, language, name, description) values (65,'PT_PT', 'Métodos de Análise Económica', 'Sobre os diferentes métodos de análise ecónomica aplicáveis dependendo do tipo de organização, finalidade ou objectivos do software: análise de decisão de organizações com fins lucrativos;\n\nmínimo rácio de retorno aceitável (critério de escolha de investimentos baseado num retorno percentual mínimo);\n\nretorno de investimento (rácio entre o valor ganho relativamente ao investido);\n\nretorno do capital aplicado;\n\nanálise custo-benefício;\n\nanálise custo-efectividade;\n\nanálise de break-even (igualdade entre custos e rendimentos);\n\ncaso de negócio (apresentação estruturada e consolidada sobre uma proposta de negócio a partir de diferentes perspectivas de decisão como custos, benefícios, risco, etc.);\n\navaliação a multiplos atributos (a nível de outras propriedades que não simplesmente dinheiro);\n\nanálise de optimização.');
insert into TopicTranslations(topicId, language, name, description) values (66,'PT_PT', 'Considerações Práticas', 'O princípio do “Suficientemente Bom” (quando o custo de adicionar uma nova funcionalidade - ou investir em algo não essencial - não pode ser medido este princípio é um indicador de quando o estado desta funcionalidade é suficientemente boa para ser entregue);\n\nmercados sem fricção (sempre que existem entraves a uma competição perfeita, sejam custos de transporte, estabelecimentos, proteccionismo e, particularmente no software, não-neutralidade de internet ou limitação de venda de aplicações em lojas especificas);\n\necossistemas (quando as qualidades ou atributos de um produto são melhoradas devido à existência de terceiros que de alguma forma interagem com  produto, como por exemplo, uma aplicação que é integrada ou configurada à medida por uma empresa externa);\n\noffshoring (o desenvolvimento de uma actividade económica fora do território de operação da organização por razões de custos ou de défices de qualidade) e outsourcing (a execução de tarefas para uma organização por uma entidade externa quando essas actividades poderiam ser feitas pela organização).');
                                                                            
insert into TopicTranslations(topicId, language, name, description) values (67,'PT_PT', 'Técnicas de Resolução de Problemas', 'Sobre a definição de resolução de problemas;\n\nformulação de problemas reais;\n\nanálises de problemas;\n\ndesenhar uma estratégia de procura de soluções;\n\nresolução de problemas com recurso a programas de computadores.' );
insert into TopicTranslations(topicId, language, name, description) values (68,'PT_PT', 'Abstracção' ,'Sobre os conceitos inerentes à abstracção - genericamente definida como “o processo e o resultado da generalização através da redução da informação a um conceito, um problema ou um fenómeno observável de modo a permitir o foco no panorâma geral;\n\nos níveis de abstracção;\n\nconceito de encapsulamento;\n\nhierarquia de abstracções.');
insert into TopicTranslations(topicId, language, name, description) values (69,'PT_PT', 'Fundamentos de Programação' ,'Sobre os conceitos-base de programação – a criação de programas de computador com recurso a código;\n\no processo de programação (desenho, escrita, teste, debug e manutenção);\n\nas características dos diferentes paradigmas de programação (não-estruturada, estruturada, procedimental, imperativa, orientada aos objectos, funcional, orientada aos aspectos, etc).');
insert into TopicTranslations(topicId, language, name, description) values (70,'PT_PT', 'Bases de Linguagens de Programação' ,'Sobre as linguagens em que é possível escrever código com a finalidade de criar programas para um computador;\n\na sintaxe e semântica de uma linguagem;\n\nlinguagens de baixo nível, linguagens de alto nível;\n\ndiferenças entre linguagens declarativas e imperativas.');
insert into TopicTranslations(topicId, language, name, description) values (71,'PT_PT', 'Técnicas e Ferramentas de Debugging' ,'Sobre o processo de encontrar e corrigir problemas no software escrito;\n\nos diferentes tipos de erros (de sintaxe, erros lógicos, erros de dados, etc.);\n\ntécnicas de debugging (um passo de cada vez, recurso a breakpoints, recurso a pontos de observação, etc.);\n\nferramentas de debugging (como debuggers ou ferramentas de análise de código estático).');
insert into TopicTranslations(topicId, language, name, description) values (72,'PT_PT', 'Estruturas e Representação de Dados' ,'Sobre a organização e formas de expressão de dados para uso por programas;\n\ntipos de estruturas de dados (listas, filas, pilhas, tabelas, tabelas de hash, etc.);\n\nas diferentes operações em diferentes estruturas de dados (CRUD – create,read,update e delete, operações de encontro de elementos, travessia, ordenação).');
insert into TopicTranslations(topicId, language, name, description) values (73,'PT_PT', 'Algoritmos e Complexidade' ,'Sobre a escrita organizada de programas em algoritmos – uma estratégia definida numa série de passos com vista à resolução de um problema;\n\nos atributos de algoritmos (modularidade, funcionalidade, robustez, simplicidade, etc.);\n\nanálise de algoritmos (análise do pior caso, análise do caso médio, notação Big-O,etc.);\n\nestratégias de design de algoritmos (força-bruta, divide and conquer, algoritmos gulosos, programação dinâmica, etc.);\n\nestratégias de análise de algoritmos (contagem de passos, análise assimptótica, análise probabilística, etc.).');
insert into TopicTranslations(topicId, language, name, description) values (74,'PT_PT', 'Conceitos Básicos de um Sistema' ,'Sobre a definição de um sistema;\n\nas propriedades de um sistema;\n\npropriedades emergentes de um sistema;\n\nengenharia de sistemas e bases sobre um sistema de computadores.');
insert into TopicTranslations(topicId, language, name, description) values (75,'PT_PT', 'Organização de um Computador' ,'Sobre os quatro níveis em que se divide a organização de um computador (as macro-arquitecturas, micro-arquitecturas, circuitos lógicos e dispositivos);\n\nsistemas digitais (baseados em sinais e código binário);\n\nlógica digital (as operações sobre números binários como AND, OR, etc.);\n\na expressão de dados binários num computador;\n\na unidade de processamento central e o seu funcionamento (CPU);\n\na organização de memória;\n\no funcionamento de dispositivos de I/O.');
insert into TopicTranslations(topicId, language, name, description) values (76,'PT_PT', 'Bases de Compiladores','Sobre o que é um compilador;\n\nas diferenças entre compiladores e interpretadores;\n\no processo de compilação.' );
insert into TopicTranslations(topicId, language, name, description) values (77,'PT_PT', 'Bases de Sistemas Operativos' ,'Sobre os conceitos de um sistemas operativo;\n\nas tarefas de um sistemas operativo;\n\nos diferentes tipos de sistemas operativos (batch, sistemas em time-sharing, sistemas em tempo real, sistemas operativos distribuídos, sistemas embebidos, sistema operativo de servidor, sistema operativo móvel, sistema operativo de computador pessoal, etc.).');
insert into TopicTranslations(topicId, language, name, description) values (78,'PT_PT', 'Bases de Dados e Gestão de Dados' ,'Sobre os conceitos de uma base de dados;\n\nentidade e esquema;\n\nos diferentes sistemas de gestão de bases de dados (Oracle, MS SQL Server, Postgre, etc.);\n\nlinguagem de interpelação de bases de dados – como SQL – as suas características e como a usar;\n\norganização e manipulação de um sistema de gestão de bases de dados;\n\nmineração de dados (a descoberta de padrões e relações pouco óbvias entre os dados).');
insert into TopicTranslations(topicId, language, name, description) values (79,'PT_PT', 'Bases de Comunicação em Redes', 'Sobre os diferentes tipos de redes (rede pessoal, rede local, wide area network, internet, etc.);\n\nos conceitos básicos de redes (os seus componentes e as diferentes funções destes);\n\nos protocolos e standards de redes (pilha OSI e seus componentes como TCP/IP, UDP, Bluetooth, etc.);\n\na Internet;\n\na Internet das Coisas;\n\nredes virtuais privadas (vulgo VPN).');
insert into TopicTranslations(topicId, language, name, description) values (80,'PT_PT', 'Computação Paralela e Distribuída' , 'Sobre os conceitos básicos sobre o que é computação paralela e computação distribuída;\n\nas diferenças entre estes dois paradigmas;\n\nmodelos de computação paralela (memória partilhada, passagem de mensagens, etc.);\n\nos principais problemas na computação distribuída.');
insert into TopicTranslations(topicId, language, name, description) values (81,'PT_PT', 'Factores Básicos de Utilização Humana' , 'Sobre os problemas típicos que advêm da utilização de software pelos utilizadores humanos;\n\nconsiderações sobre o I/O (como mostrar o output a utilizadores, qual o formato mais adequado, qual a maneira mais agradável de apresentar, etc.);\n\nmensagens de erro (como explicar claramente o que aconteceu e como resolver, qual o tipo de linguagem, etc.);\n\nrobustez de software (como o software tolera o uso incorrecto por pessoas, como recuperar de maneira a não desincentivar o uso por pessoas, etc.).');
insert into TopicTranslations(topicId, language, name, description) values (82,'PT_PT', 'Factores Básicos de Desenvolvimento por Humanos' , 'Sobre os problemas comuns que advêm de o software ser construído e mantido por humanos e como a sua escrita afecta estas actividades;\n\ncomo estruturar o código para facilitar compreensão;\n\ncomo escrever comentários que facilitem o trabalho dos responsáveis presentes e futuros do software.');
insert into TopicTranslations(topicId, language, name, description) values (83,'PT_PT', 'Desenvolvimento e Manutenção Segura' , 'Sobre as práticas e regras seguidas com a finalidade de tornar o software mais seguro em todas as suas fases, quer a nível de requisitos, como construção e teste.');
                                                                            
insert into TopicTranslations(topicId, language, name, description) values (84,'PT_PT','Conjuntos, Relacionamentos e Funções' ,'Sobre os conceitos matemáticos e lógicos sobre os conjuntos (colecção de elementos), as suas propriedades e as suas operações (intesecção, união, produto cartesiano, etc.);\n\nsobre relacionamentos (associações entre dois conjuntos de informação);\n\nsobre funções matemáticas (uma relação de comportamento conhecido que exprime o mapeamento entre elementos de domínios).' );
insert into TopicTranslations(topicId, language, name, description) values (85,'PT_PT','Lógica Básica' , 'Sobre a lógica proposicional, a sua terminologia e leis (variáveis Booleanas, operações booleanas, Leis de Identidade, Leis Distributivas, Leis de De Morgan, etc.): a lógica de Predicados, as suas propriedades, terminologia e leis.');
insert into TopicTranslations(topicId, language, name, description) values (86,'PT_PT','Técnicas de Prova' ,'Sobre os argumentos que estabelecem rigorosamente a verdade de uma afirmação;\n\nos métodos de prova de um teorema (provas por contradição, provas por indução, etc.).' );
insert into TopicTranslations(topicId, language, name, description) values (87,'PT_PT','Bases da Contagem' ,'Sobre as acções que permitem encontrar o número de elementos num conjunto finito de elementos e suas regras (regra da soma, regra do produto, etc.) e princípios;\n\nprincípio da inclusão-exclusão;\n\ndefinição de recursividade, aleatoriedade, probabilidade, permutação e combinação.' );
insert into TopicTranslations(topicId, language, name, description) values (88,'PT_PT','Grafos e Árvores' , 'Sobre os diferentes tipos de grafos (grafos direccionados, grafos não-direccionados, etc.), a sua terminologia (vértices, nós, peso, arestas, etc.) e operações (travessia, conexões, etc.);\n\nos diferentes tipos de árvores, as suas propriedades e operações (travessias, adições, etc.).' );
insert into TopicTranslations(topicId, language, name, description) values (89,'PT_PT','Probabilidade Discreta' ,'Sobre a descrição matemática da aleatoriedade a sua terminologia, propriedades e operações.' );
insert into TopicTranslations(topicId, language, name, description) values (90,'PT_PT','Máquinas de Estado Finitas' , 'Sobre as máquinas de estados finitos (a abstracção matemática composta por um número finito de estados e as transições entre estes), a sua terminologia e operações.');
insert into TopicTranslations(topicId, language, name, description) values (91,'PT_PT','Gramáticas' , 'Sobre as gramáticas de linguagens formais, a sua terminologia (vocabulário, frase, terminais, símbolo, etc.);\n\nos tipos de gramáticas existentes (gramática livre de contexto, gramática sensível ao contexto, etc.).');
insert into TopicTranslations(topicId, language, name, description) values (92,'PT_PT','Precisão numérica, exactidão e erros' , 'Sobre os problemas que recorrem na representação de números;\n\no carácter finito da precisão de representação de números num computador;\n\ntécnicas de arredondamentos;\n\nalgarismos significativos;\n\ntipos de erros (relativos, absolutos).');
insert into TopicTranslations(topicId, language, name, description) values (93,'PT_PT','Teoria dos Números' ,'Sobre os números;\n\nos tipos de números (inteiro, racional, real, complexo, imaginário etc.);\n\nterminologia e operações (divisão, mod, módulo);\n\nos números primos, a sua utilidade a sua aplicação (como criptografia).' );
insert into TopicTranslations(topicId, language, name, description) values (94,'PT_PT','Estruturas Algébricas' ,'Sobre as estruturas algébricas (definidas como conjuntos sujeitos a algumas operações e que satisfaçam um número de axiomas);\n\nsobre grupos, as suas propriedades (associação, identidade, fecho, etc.) e tipos (monóide, subgrupo);\n\nanéis (um conjunto com duas operações binárias - normalmente adição e multiplicação - onde cada operação combina dois elementos para formar um terceiro).' );
                                                                            
insert into TopicTranslations(topicId, language, name, description) values (95 ,'PT_PT','Métodos Empíricos e Técnicas Experimentais' ,'Sobre como propôr soluções ou modelos de solução e realizar experiências para resolver problemas;\n\ncriação de experiências controladas (formular hipóteses, criar pré-condições, observar variáveis, relacionamento entre resultados, etc.);\n\nestudo observacional com recurso a contextualização;\n\nestudo retrospectivo, também conhecido como estudo histórico (análise de  dados históricos com a finalidade de encontrar relacionamentos entre dados e prever eventos futuros.' );
insert into TopicTranslations(topicId, language, name, description) values (96 ,'PT_PT','Análise Estatística' ,'Sobre a capacidade de atingir resultados generalizaveis através do estudo de uma população limitada de amostras de resultados prévios (i.e. com recurso a estatística);\n\nos conceitos estatísticos de amostra, população, unidade de análise, variável aleatória, evento, distribuição de variáveis, estimação, tipos de estimativas, propriedades de estimadores e testes de hipóteses estatísticas;\n\ncorrelação e regressão.' );
insert into TopicTranslations(topicId, language, name, description) values (97 ,'PT_PT','Medição' ,'Sobre a problemática da medição no software e as suas diferenças fundamentais para outros atributos de medição mais simples;\n\nos conceitos de níveis (ou escalas) de medição (nominal, ordinal, intervalar e por rácios);\n\nmedidas directas versus medidas indirectas;\n\nconfiabilidade e validade de uma medida;\n\navaliação de confiabilidade de medidas.' );
insert into TopicTranslations(topicId, language, name, description) values (98 ,'PT_PT','Desenho de Engenharia' ,'Sobre os desafios que a elaboração de uma solução estruturada para um problema de engenharia representam para o engenheiro, sendo que o desenho neste caso não tem nada que ver com o seu conceito tradicional - a representação gráfica - mas sim com o planeamento ou arquitectura de uma solução para um problema, o seu processo e as suas fases (definição de um problema, obtenção de informação pertinente, geração de múltiplas soluções, análise e selecção de uma solução, implementação da solução).' );
insert into TopicTranslations(topicId, language, name, description) values (99 ,'PT_PT','Modelação, Simulação e Prototipagem' ,'Sobre os conceitos e técnicas de modelação (o processo de representação de parte ou totalidade de um sistema recorrendo a abstracções) e os seus diferentes tipos (icónico, analógico e simbólico);\n\no conceito de simulação (condução de experiências em modelos com a finalidade de melhorar a compreensão sobre o mesmo) e a sua construção;\n\no conceito de protótipo (uma representação inicial, parcial ou incompleta de um sistema) e a sua utilização.' );
insert into TopicTranslations(topicId, language, name, description) values (100,'PT_PT','Standards' ,'Sobre o conceito de standard (requisito, especificação, guia ou característica que deve ser observado por engenheiros de modo que produtos, processos e materiais tem níveis aceitáveis de qualidade);\n\nos diferentes tipos de standards existentes;\n\na conformidade mensurável com standards;\n\nas diferentes entidades que produzem standards internacionais de engenharia.' );
insert into TopicTranslations(topicId, language, name, description) values (101,'PT_PT','Análise de Causa' ,'Sobre o processo de investigação e identificação de como e porque aconteceu um evento indesejável e sua causa de raíz (i.e. o que deu origem ao evento);\n\nas principais técnicas para conduzir este tipo de análise (métodos de revisão, diagramas de estado presente vs estado desejável, revisão por terceiros, árvores de falha, etc.);\n\nas ferramentas de auxílio à análise (diagramas de causa-efeito, histogramas, diagramas de Pareto, etc.).' );

insert into TopicTranslations(topicId, language, name, description) values (102,'PT_PT','Nenhuma das Áreas do Conhecimento', 'Para qualquer tópico do programa que não encaixa em qualquer das Áreas do Conhecimento.' );



